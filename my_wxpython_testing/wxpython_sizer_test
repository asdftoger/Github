#!/usr/bin/python
# -*- coding: utf-8 -*-

# border.py

import wx
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.backends.backend_wxagg import FigureCanvasWxAgg as FigureCanvas
from matplotlib.backends.backend_wx import NavigationToolbar2Wx

class myWindow(wx.Frame):
  
    def __init__(self, parent, title):
        super(myWindow, self).__init__(parent=parent, title=title, 
            size=(800, 600))
            
        self.InitUI()
        self.Centre()
        self.Show()     
        
    def InitUI(self):
        
        #Initialize vertical box structure
        vbox = wx.BoxSizer(wx.VERTICAL)
        
        #Add a text control widget
        self.display = wx.TextCtrl(self, style=wx.TE_RIGHT)
        vbox.Add(self.display, flag=wx.EXPAND|wx.TOP|wx.BOTTOM, border=4)
        
        #Add matplotlib figure
        
        self.fig = plt.figure(figsize=(4,3))
        self.axes = self.fig.add_subplot(111)
        self.line, = self.axes.plot([],[])
        
        #parent = self.f1 puts the figure inside the frame  
        self.plotCanvas = FigureCanvas(parent = self,id = -1,figure=self.fig)
        self.sinePlot()
        
        vbox.Add(self.plotCanvas,flag=wx.EXPAND|wx.TOP|wx.BOTTOM, border=4)
        
        #Slider for matplotlib
        self.sld = wx.Slider(self, value=1, minValue=1, maxValue=5,
            size=(250, -1), style=wx.SL_HORIZONTAL)
        
        self.sld.Bind(wx.EVT_SCROLL, self.OnSliderScroll)
        vbox.Add(self.sld,flag=wx.EXPAND|wx.TOP|wx.BOTTOM, border=4)
        
        #Closing button
        self.buttonClose = wx.Button(self, label="Close App",style=wx.ALIGN_CENTRE)
        self.buttonClose.Bind(wx.EVT_BUTTON, self.closeWindow)
        vbox.Add(self.buttonClose,flag=wx.EXPAND|wx.TOP|wx.BOTTOM, border=4)
        
        
        #Set the vboxsizer group
        self.SetSizer(vbox)
        
    def closeWindow(self,e):
        self.Close(True)
        
    def sinePlot(self,k = 1):
        self.axes.clear()
        t = np.arange(0.0, 3.0, 0.01)
        s = np.sin(2 *np.pi * k * t)
        self.line.set_data(t,s)   
    
    def OnSliderScroll(self,e):
        obj = e.GetEventObject()
        val = obj.GetValue()
        
        self.sinePlot(val)

if __name__ == '__main__':
  
    app = wx.App()
    myWindow(None, title='Border')
    app.MainLoop()
    exit()